{"version":3,"sources":["../src/components/countProc.js","../src/components/drawChart.js","../src/components/createDataList.js","../src/main.js"],"names":["countPercent","num","toFixed","drawChart","recovered","sick","deaths","data","google","visualization","arrayToDataTable","PieChart","document","getElementById","draw","createDataList","name","element","template","querySelector","innerHTML","dataUpdate","confirmed","formCountry","forms","country","heading","charts","load","setOnLoadCallback","fetch","then","response","json","countries","forEach","elements","addEventListener","e","target","value","map","item","provinceState","sort","index","array","length","preventDefault","inputElemCountry","inputElemCity","city","lastUpdate","update","slice","style","color","catch","error","cityInfo","find","console","log","reduce","total","tRecovered","tConfirmed","tDeaths","sickNum","recoveredPr","deathsPr","sickPr","placeholder"],"mappings":"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","file":"main.c03d6aea.js","sourceRoot":"../public","sourcesContent":["function countPercent(num) {\n    return +((num * 100).toFixed(2));\n};\n\nexport default countPercent;","import countPercent from './countProc.js';\n\nfunction drawChart(recovered = 0.5, sick = 0.4, deaths = 0.1) {\n    var data = google.visualization.arrayToDataTable([\n    ['Label', 'Percentage'],\n    [`recovered: ${countPercent(recovered)}%`, recovered],\n    [`sick: ${countPercent(sick)}%`, sick],\n    [`deaths: ${countPercent(deaths)}%`, deaths]\n  ]);\n  \n    // Optional; add a title and set the width and height of the chart\n    var options = {'width':400, 'height':150};\n  \n    // Display the chart inside the <div> element with id=\"piechart\"\n    var chart = new google.visualization.PieChart(document.getElementById('piechart'));\n    chart.draw(data);\n  }\n\n  export default drawChart;","function createDataList(name, element) {\n    let template = `<option value=\"${name}\">${name}</option>`;\n    document.querySelector(element).innerHTML += template;\n};\n\nexport default createDataList;\n\n","import './sass/style.scss';\nimport drawChart from './components/drawChart.js';\nimport createDataList from './components/createDataList.js';\n\nlet dataUpdate = document.querySelector('.date > span');\nlet recovered = document.querySelector('.recovered');\nlet confirmed = document.querySelector('.confirmed');\nlet deaths = document.querySelector('.deaths');\nlet sick = document.querySelector('.sick');\nlet formCountry = document.forms.country;\nlet heading = document.querySelector('.header > h1 > span');\n\n// Load google charts\ngoogle.charts.load('current', {'packages':['corechart']});\ngoogle.charts.setOnLoadCallback(drawChart);\n\n// LIST of Countries\nfetch('https://covid19.mathdro.id/api/countries')\n.then(response => response.json())\n.then(data => {\n  let arrCountries = data.countries;\n\n  arrCountries.forEach(country => {\n    createDataList(country.name, 'datalist#countriesList');\n  });\n});\n\n// LIST of cities/regions\nformCountry.elements[0].addEventListener('change', (e) => {\n  let country = e.target.value;\n\n  fetch(`https://covid19.mathdro.id/api/countries/${country}/confirmed`)\n  .then(response => response.json())\n  .then(data => {\n    let citySorted = data.map(item => item.provinceState).sort();\n    citySorted.forEach((item, index, array) => {\n      if(array.length >= 2) createDataList(item, 'datalist#citiesList');\n    });\n  });\n})\n\n//ON SUBMIT\nformCountry.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  // reset\n  recovered.innerHTML = 0;\n  confirmed.innerHTML = 0;\n  deaths.innerHTML = 0;\n  sick.innerHTML = 0;\n  document.querySelector('datalist#citiesList').innerHTML = ' ';\n\n  // access to input values\n  let inputElemCountry = e.target.elements[0];\n  let country = inputElemCountry.value;\n\n  let inputElemCity = e.target.elements[1];\n  let city = inputElemCity.value;\n\n  //show last update\n  fetch(`https://covid19.mathdro.id/api/countries/${country}`)\n  .then(response => response.json())\n  .then(country => country.lastUpdate)\n  .then(update => {\n    let lastUpdate = `${update.slice(0, 10)} at ${update.slice(11, 16)}`;\n    dataUpdate.style.color = 'green';\n    dataUpdate.innerHTML = lastUpdate;\n  })\n  .catch((error) => {\n    dataUpdate.style.color = 'red';\n    dataUpdate.innerHTML = `For \"${country}\" NO information provided`;\n  });\n\n  // CONFIRMED, RECOVERED, DEATHS\n  fetch(`https://covid19.mathdro.id/api/countries/${country}/confirmed`)\n  .then(response => response.json())\n  .then(data => {\n    // receive needed data\n    if(city && data[0].provinceState) {\n      heading.innerHTML = city;\n      let cityInfo = data.find(item => item.provinceState === city);\n      return [cityInfo.recovered, cityInfo.confirmed, cityInfo.deaths];\n    } else {\n      heading.innerHTML = country;\n\n      console.log(data[0].provinceState);\n      let totalRecovered = data.reduce((total, { recovered }) => total + recovered, 0);\n      let totalConfirmed = data.reduce((total, { confirmed }) => total + confirmed, 0);\n      let totalDeaths = data.reduce((total, { deaths }) => total + deaths, 0);\n\n      return [totalRecovered, totalConfirmed, totalDeaths];\n    };    \n  })\n  .then(([tRecovered, tConfirmed, tDeaths]) => { // process the chosen data\n    // count active cases\n    let sickNum = tConfirmed - (tRecovered + tDeaths);\n\n    // place data on page\n    recovered.innerHTML = tRecovered;\n    confirmed.innerHTML = tConfirmed;\n    deaths.innerHTML = tDeaths;\n    sick.innerHTML = sickNum;\n\n    // count % and draw chart\n    let recoveredPr = tRecovered / tConfirmed;\n    let deathsPr = tDeaths / tConfirmed;\n    let sickPr = sickNum / tConfirmed;\n    drawChart(recoveredPr, sickPr, deathsPr);\n  })\n  .catch((error) => {\n    dataUpdate.style.color = 'red';\n    dataUpdate.innerHTML = `There is no DATA`;\n  });\n\n  // reset inputs\n  inputElemCountry.value = '';\n  inputElemCountry.placeholder = 'Country*';\n\n  inputElemCity.value = '';\n  inputElemCity.placeholder = 'City';\n});"]}